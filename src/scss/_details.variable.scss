@use "./color.variable";
@use "sass:map";

$transition: 0.4s;
$padding: 10%;
$min-padding: 5%;
$transition: all 0.3s 0s ease;

@function get-media-query($size) {
  $media-size: (
    phone: "(max-width: 600px)",
    pc: "(min-width: 600px)",
    min: "(max-width: 360px)",
    middle: "(max-width: 1030px)",
    large: "(min-width: 1600px)",
  );

  @return "screen and " + map.get($media-size, $size);
}

@mixin flex-style($warp: wrap, $justify: center) {
  display: flex;
  flex-wrap: $warp;
  align-items: center;
  justify-content: $justify;
}

@mixin with-font-size($size: normal, $offset: 0) {
  $fontsize: (
    title: 3rem,
    big: 1.6rem,
    normal: 1.1rem,
    little: 1rem,
  );

  font-size: map.get($fontsize, $size) + $offset;
  line-height: map.get($fontsize, $size) + $offset + 0.4rem;
}

@mixin make-padding($display-size, $pos: "") {
  @if $display-size == $large {
    padding#{$pos}: 10%;
  }

  @if $display-size == $isPc {
    padding#{$pos}: 5%;
  }

  @if $display-size == $isPhone {
    padding#{$pos}: 3%;
  }
}

@mixin fully-spread {
  width: 100%;
  height: 100%;
}

@keyframes intermittente {
  75% {
    opacity: 0.7;
  }
}

@mixin flashing {
  animation: intermittente 0.01s infinite alternate;
}

@mixin neon-text($shadow-size: 6) {
  @include color.text-shadow(normal, text-shadow, $shadow-size);

  opacity: 1;
}

@mixin hover-neon($shadow-size: 6) {
  transition: #{$transition};

  &:hover {
    @include flashing();
    @include neon-text($shadow-size);
  }
}

@mixin marker {
  position: relative;

  &::after {
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: -1;
    width: 100%;
    height: 0.1rem;
    content: "";

    @include color.main(normal, marker);
  }
}

@mixin components-size {
  @media #{$isPc} {
    max-width: 33%;
  }

  @media #{$large} {
    max-width: 25%;
  }

  @media #{$middle} {
    max-width: 50%;
  }

  @media #{$isPhone} {
    max-width: 100%;
  }
}

@mixin transform($translateY: 0, $deg: 0deg) {
  transform: skew($deg, 0deg) translateX(-60%) translateY($translateY);
}

@function border($thickness) {
  @return $thickness solid;
}

// @mixin triangle($thickness: 15vh, $color: color.get-main-color("light")) {

//   border-top: border($thickness, $color);

//   border-right: border($thickness, transparent);

//   border-bottom: border($thickness, transparent);

//   border-left: border($thickness, $color);

// }

.name {
  @include with-font-size(big);

  @media #{get-media-query(phone)} {
    @include with-font-size(big, -0.1rem);
  }
}

@mixin square($size) {
  width: 100%;
  height: 100%;
}

@mixin hover-link($shadow-size: 6) {
  cursor: pointer;
  transition: all 300ms 0s ease;

  @include color.neutral(dark, back);
  @include hover-neon($shadow-size);
}

.text {
  max-width: 32.5rem;
  padding: 2%;
  margin: 0 auto;

  &:hover {
    @include color.clear(back);
  }

  @include color.neutral(dark, back);
  @include hover-neon(6);
}

// @mixin shadow {

// }

.title {
  display: inline-block;
  padding: 1vh 0;
  margin: 1vh auto;

  @include with-font-size(title);
  @include marker();

  @media #{get-media-query(phone)} {
    padding: 2% 2% + $min-padding;
  }

  & > * {
    @include with-font-size(little);
  }

  & > * + * {
    padding-top: 0.1rem;
  }
}
