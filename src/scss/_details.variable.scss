@use "./color.variable";
@use "./animation";
@use "sass:map";

$transition: 0.4s;
$padding: 10%;
$min-padding: 5%;
$transition: all 0.3s 0s ease;
$main: color.get-main-color("main");
$light: #fff;

@function get-media-query($size) {
  $media-size: (
    phone: "(max-width: 600px)",
    pc: "(min-width: 600px)",
    min: "(max-width: 360px)",
    middle: "(max-width: 1030px)",
    large: "(min-width: 1600px)",
  );

  @return "screen and " + map.get($media-size, $size);
}

@function get-fontsize($size) {
  $fontsize: (
    title: 3rem,
    sub: 1.6rem,
    main: 1.1rem,
    little: 1rem,
  );

  @return map.get($fontsize, $size);
}

@mixin flex-style($warp: wrap, $justify: center) {
  display: flex;
  flex-wrap: $warp;
  align-items: center;
  justify-content: $justify;
}

@mixin flex-component {
  align-content: flex-start;
  align-self: stretch;
}

@mixin about-font($font-size: $main-fontsize) {
  font-size: $font-size;
  line-height: $font-size + 0.4rem;
}

@mixin make-padding($display-size, $pos: "") {
  @if $display-size == get-media-query("large") {
    padding#{$pos}: 10%;
  }

  @if $display-size == get-media-query("pc") {
    padding#{$pos}: 5%;
  }

  @if $display-size == get-media-query("phone") {
    padding#{$pos}: 3%;
  }
}

@mixin fully-spread {
  width: 100%;
  height: 100%;
}

@mixin cancel-background-color {
  background-color: #fff0;
}

@mixin neon-text($shadow-size: 6) {
  text-shadow:
    0 0 #{$shadow-size}px $light,
    0 0 $shadow-size + 14px $main,
    0 0 $shadow-size + 24px $main;
  opacity: 1;
}

@mixin neon-icon {
  filter: drop-shadow(0 0 5px $light) drop-shadow(0 0 12px $main);
}

@mixin hover-neon($shadow-size: 6) {
  transition: #{$transition};

  &:hover {
    @include animation.flashing();
    @include neon-text($shadow-size);
  }
}

@mixin marker {
  $shadow: 0 0 6px $light;

  position: relative;

  &::after {
    @include animation.aurora-anim();

    position: absolute;
    bottom: 0;
    left: 0;
    z-index: -1;
    width: 100%;
    height: 0.1rem;
    content: "";
    background-color: $light;
  }
}

@mixin components-size {
  @media #{get-media-query("pc")} {
    max-width: 33%;
  }

  @media #{get-media-query("large")} {
    max-width: 25%;
  }

  @media #{get-media-query("middle")} {
    max-width: 50%;
  }

  @media #{get-media-query("phone")} {
    max-width: 100%;
  }
}

@mixin transform($translateY: 0, $deg: 0deg) {
  transform: skew($deg, 0deg) translateX(-60%) translateY($translateY);
}

@mixin square($size) {
  width: 100%;
  height: 100%;
}

@mixin hover-link($shadow-size: 6) {
  cursor: pointer;
  background-color: color.get-base-color("dark");

  @include hover-neon($shadow-size);
}

@function border($thickness, $color) {
  @return $thickness solid $color;
}

.title {
  @include about-font(get-fontsize("title"));
  @include marker();

  display: inline-block;
  margin: 1vh auto;

  @media #{get-media-query("phone")} {
    @include about-font(get-fontsize("title") - 0.7rem);
  }
}

.text > * {
  @include about-font(get-fontsize("little"));
}

.name {
  @include about-font(get-fontsize("sub"));

  @media #{get-media-query("phone")} {
    @include about-font(get-fontsize("sub") - 0.1rem);
  }
}

.text > * + * {
  padding-top: 0.1rem;
}
